{
  "name": "ipc-rpc",
  "version": "0.1.8",
  "description": "ipc communication as rpc(remote procedure call) for  electron apps",
  "exports": {
    "./main": {
      "types": "./dist/main.ts",
      "import": "./dist/main.es.js",
      "require": "./dist/main.cjs.js"
    },
    "./renderer": {
      "types": "./dist/renderer.ts",
      "import": "./dist/renderer.es.js",
      "require": "./dist/renderer.cjs.js"
    }
  },
  "files": [
    "*.js",
    "*.d.ts"
  ],
  "scripts": {
    "dev": "parcel test/web/index.html --out-dir test/cache",
    "prebuild": "npm run lint && rimraf dist/*",
    "build": "rollup -c rollup.config.ts",
    "postbuild": "ts-node build/update-pkg-version.ts && cp package.json dist",
    "postpublish": "./build/post-publish2npm.sh",
    "test": "jest --coverage",
    "test:server": "jest --coverage --watch",
    "lint": "tslint --project ./tsconfig.json --config tslint.json"
  },
  "repository": {
    "type": "git",
    "url": "git+https://oe@github.com/oe/ipc-rpc.git"
  },
  "keywords": [
    "electron",
    "ipc-rpc",
    "ipc",
    "rpc",
    "message"
  ],
  "author": {
    "name": "Saiya",
    "url": "https://github.com/oe"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/oe/ipc-rpc/issues"
  },
  "homepage": "https://github.com/oe/ipc-rpc#readme",
  "peerDependencies": {
    "electron": "*"
  },
  "devDependencies": {
    "@babel/core": "^7.1.2",
    "@babel/plugin-transform-runtime": "^7.1.0",
    "@babel/runtime-corejs2": "^7.1.2",
    "@types/jest": "^23.3.1",
    "@types/node": "^10.5.5",
    "electron": "^11.2.0",
    "jest": "22.1.4",
    "parcel-bundler": "^1.12.4",
    "rimraf": "2.6.2",
    "rollup": "0.55.3",
    "rollup-plugin-typescript2": "^0.16.1",
    "ts-jest": "^23.0.1",
    "ts-node": "^7.0.1",
    "tslint": "^5.11.0",
    "tslint-config-prettier": "^1.14.0",
    "tslint-config-standard": "^7.1.0",
    "typescript": "^3.0.1"
  },
  "jest": {
    "transform": {
      "^.+\\.tsx?$": "ts-jest"
    },
    "verbose": true,
    "testURL": "http://localhost/",
    "testRegex": "(/__tests__/.*|(\\.|/)(test|spec))\\.(jsx?|tsx?)$",
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js",
      "jsx",
      "json",
      "node"
    ]
  }
}